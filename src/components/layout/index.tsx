import React, {ReactNode, useContext} from "react";
import Head from "next/head";
import {useSession} from "@inrupt/solid-ui-react";
import Loading from "@/components/loading";
import LoginForm from "@/components/loginForm";
import LayoutHeader from "@/components/layout/header";
import Container from "@/components/container";
import ToolBox from "@/components/toolBox";
import styles from "./styles.module.css";
import Navigation from "@/components/navigation";
import FooterNavigation from "@/components/footerNavigation";
import Footer from "@/components/footer";
import DeveloperModeContext from "@/contexts/developerMode";
import ErrorDetails from "@/components/errorDetails";

interface LayoutProps {
    children?: ReactNode;
    loading?: boolean;
    error?: Error;
}

export default function Layout({children, loading, error}: LayoutProps) {
    const {sessionRequestInProgress, session: {info: {isLoggedIn}}} = useSession();
    const {developerMode} = useContext(DeveloperModeContext);

    if (sessionRequestInProgress || loading) {
        return <Loading/>
    }

    if (error) {
        return <ErrorDetails error={error}/>
    }

    return (
        <>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app"/>
                <meta name="viewport" content="width=device-width, initial-scale=1"/>
                <link rel="icon" href="/favicon.ico"/>
                <link rel="solid-app-manifest" href="/manifest.ttl#solid-app"/>
                <link rel="icon" type="image/png" sizes="512x512" href="/icon.png"/>
            </Head>
            <div className={styles.layoutContainer}>
                <LayoutHeader/>
                <main className={styles.layoutMain}>
                    <Container>
                        {isLoggedIn && children}
                        {!isLoggedIn && !sessionRequestInProgress && <LoginForm/>}
                    </Container>
                </main>
                {isLoggedIn && (
                    <>
                        <Container>
                            <Navigation/>
                        </Container>
                        <Footer>
                            {developerMode && (
                                <>
                                    <ToolBox>
                                        <FooterNavigation/>
                                    </ToolBox>
                                </>
                            )}
                            {!developerMode && (
                                <Container>
                                    <FooterNavigation/>
                                </Container>
                            )}
                        </Footer>
                    </>
                )}
            </div>
        </>
    )
}